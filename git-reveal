#!/usr/bin/python

import getopt, sys, os, subprocess


def main():
    try:
        opts, args = getopt.getopt(sys.argv[1:], "hv", ["help", "verbose"])
    except getopt.GetoptError as err:
        print str(err)
        usage()
        
    verbose=False    
    for o, a in opts:
        if o == "-v":
            verbose=True
        elif o in ("-h", "--help"):
            usage()
        else:
            assert False, "unhandled option"
            usage()
    
    scanForRepos(verbose)


def scanForRepos(verbose):

    dic = os.walk('.').next()
    root = dic[0]        
    dirs = dic[1]
    
    for dir in dirs:
        fullDir=os.path.abspath(os.path.join(root, dir))
        if os.path.exists(fullDir + "/.git"):
            revealRepo(fullDir, verbose)
                        

def revealRepo(dir, verbose):
    command = "cd '" + dir + "'; git status -b"
    output = subprocess.check_output(command, shell=True)
    if "nothing" not in output:
        command2 = 'echo "$(tput setaf 1)' + dir + '$(tput sgr0)"'
        print subprocess.check_output(command2, shell=True).strip()
        
        if verbose:
            command3 =  "cd '" + dir + "'; git status -s"
            print subprocess.check_output(command3, shell=True).strip() 
            print ""
                                 

def usage():
    print "usage: git-reveal [-hv]"
    sys.exit(2)    


if __name__ == "__main__":
    main()
